# Generated by Django 5.2 on 2025-04-19 01:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import medialibrary.common.models


class Migration(migrations.Migration):

    dependencies = [
        ("catalog", "0002_initial"),
        ("common", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="photo",
            name="type",
            field=models.IntegerField(
                choices=[
                    (3, "User Avatar"),
                    (6, "Poster"),
                    (9, "Movie Photos"),
                    (12, "Game Photos"),
                    (18, "Series Photos"),
                    (21, "Video Preview"),
                ],
                verbose_name="Type",
            ),
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.IntegerField(choices=[(3, "Trailer")], verbose_name="Type"),
                ),
                (
                    "video",
                    models.FileField(
                        upload_to=medialibrary.common.models.video_upload_to,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["mov", "avi", "mp4", "webm", "mkv"]
                            )
                        ],
                        verbose_name="Video",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="videos",
                        to="catalog.game",
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="videos",
                        to="catalog.movie",
                    ),
                ),
                (
                    "preview",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.photo",
                    ),
                ),
                (
                    "series",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="videos",
                        to="catalog.series",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Video",
                "verbose_name_plural": "Videos",
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(
                                ("game__isnull", True),
                                ("movie__isnull", False),
                                ("series__isnull", True),
                            ),
                            models.Q(
                                ("game__isnull", True),
                                ("movie__isnull", True),
                                ("series__isnull", False),
                            ),
                            models.Q(
                                ("game__isnull", False),
                                ("movie__isnull", True),
                                ("series__isnull", True),
                            ),
                            _connector="OR",
                        ),
                        name="exactly_one_of_movie_series_game_video",
                    )
                ],
            },
        ),
    ]
